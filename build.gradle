plugins {
    id "java"
    id "maven-publish"
    id "signing"
    id "org.embulk.embulk-plugins" version "0.7.0"
}

repositories {
    mavenCentral()
}

group = "org.embulk"
description = "Parses Excel files(xls, xlsx) read by other file input plugins."
version = "0.1.15-SNAPSHOT"

configurations {
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    options.encoding = "UTF-8"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }

    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly "org.embulk:embulk-spi:0.11"

    implementation "org.embulk:embulk-util-config:0.5.0"
    implementation "org.embulk:embulk-util-file:0.2.0"
    implementation "org.embulk:embulk-util-timestamp:0.3.0"

    implementation group: 'org.apache.poi', name : 'poi', version: '5.2.3'
    implementation(group: 'org.apache.poi', name : 'poi-ooxml', version: '5.2.3') {
        exclude group: 'stax', module: 'stax-api'
    }    

    // The Embulk main packages are often required for testing.
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.embulk:embulk-spi:0.11"
    testImplementation "org.embulk:embulk-core:0.11.0"
    testImplementation "org.embulk:embulk-deps:0.11.0"
    testImplementation "org.embulk:embulk-junit4:0.11.0"
    testImplementation "io.github.hishidama.embulk:hm-embulk-tester:0.1.+" // â˜…
}

embulkPlugin {
    mainClass = "org.embulk.parser.poi_excel.PoiExcelParserPlugin"
    category = "parser"
    type = "poi_excel"
}

jar {
    metaInf {
        from rootProject.file("LICENSE")
    }
}

sourcesJar {
    metaInf {
        from rootProject.file("LICENSE")
    }
}

javadocJar {
    metaInf {
        from rootProject.file("LICENSE")
    }
}

task checkDependencies {
    notCompatibleWithConfigurationCache("The task \"checkDependencies\" filters configurations at execution time.")
    doLast {
        configurations.findAll { it.canBeResolved }.each { it.resolve() }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name

            from components.java
            // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
            // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                name = project.name
                description = project.description
                url = 'https://github.com/hishidama/embulk-parser-poi_excel'

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "MIT License"
                        url = "https://opensource.org/licenses/MIT"
                        distribution = "repo"
                    }
                }

                developers {
                    developer {
                        id = 'hishidama'
                        name = 'Hishida Masato'
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/hishidama/embulk-parser-poi_excel.git"
                    developerConnection = "scm:git:git@github.com:hishidama/embulk-parser-poi_excel.git"
                    url = "https://github.com/hishidama/embulk-parser-poi_excel"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    if (project.hasProperty("signingKey") && project.hasProperty("signingPassword")) {
        logger.lifecycle("Signing with an in-memory key.")
        useInMemoryPgpKeys(signingKey, signingPassword)
    }
    sign publishing.publications.maven
}

test {
    maxHeapSize = "2g"
}

gem {
  authors       = ["hishidama"]
  summary       = "[Apache POI Excel parser plugin for Embulk]"
  description   = "[Parses Excel files(xls, xlsx) read by other file input plugins.]"
  email         = ["hishi.dama@asahi.email.ne.jp"]
  licenses      = ["MIT"]
  homepage      = "https://github.com/hishidama/embulk-parser-poi_excel"
}
